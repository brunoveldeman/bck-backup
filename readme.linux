-------------------------------
	bck-backup for Linux 
-------------------------------

1. Linux instalation.
    
1.1 Install the following packages/tools:

	perl		: the perl language interpreter
	wget		: used by selfupdate ( This should be changed and the downloading should be handeled in perl code. )
    
1.2 Download bck-backup.

	Your can download from this link:

	http://sourceforge.net/projects/bck-backup/
	
	Or from svn if you want the latest development version:
	
	#>svn co https://bck-backup.svn.sourceforge.net/svnroot/bck-backup bck-backup

2 Instalation

2.1 Run install.sh

	If we download the package, instalation is done by the installer and we can skip the copy files instructions.
	
	#>./istall.sh
	
	The package creates the configuration files in the /etc/bck folder with example added to its name to avoid
	accidentaly overwriting our configuration files.
	
	By default, no files will be overwritten, using the -c option, we can force the install to overwrite all files.

2.2 Copy files manualy.

	
	If we downloaded the files from the svn, we will have to set it up manualy.
	
	There are two main folders, trunk and stable. Check out the readme in each folder for information.
	
	./trunk/ will hold the latest development release, and it can be broken.
	
	./stable/ will hold the lasted know working and more or less tested release, but will be outdated.
	
	Correct locations for all files:
		bck and modules: /usr/lib/bck
		plugins: /usr/lib/bck/plugins
		configuration files: /etc/bck
		database files: /var/lib/bck

2.1 Program file.

    Copy bck to /usr/lib/bck
	
	#>cp bck /usr/lib/bck
    
	If we copy the program file in a directory that is not in your PATH, we will have to 
	run it by typing it's full path, or we can create a symlink:
	
	ln -s /usr/lib/bck/bck /usr/local/sbin/bck
	
2.2 Configuration file(s).

    Create a directory called bck in /etc
	
	#>mkdir -p /etc/bck
    
	Copy the config file bck.config and bck.default to /etc/bck/
    
	#>cp bck.config /etc/bck
	#>cp bck.default /etc/bck
	
3. Configure bck-backup.

	We bck-backup use several configuration files. The one used is defined
	by the --config-file=/my/path/my.config.file command line option.
	A special named configuration file called "bck.default" in "/etc/bck" can be
	used to define default values for all configuration files. More on this later.
    The config file that comes by default should have an example for each type of copy.
    Check config file structure with:
    
	#>bck --check
	
    Any errors should be reported.
    
4. Test configuration.

    It's always a good idea to test.
    We can run bck-backup from command line with the --debug or --verbose options
	to to get information on the progress of the copy.
    
    To run a configured section named "test", use --do=test
    We can put several sections on one line, --do=test,section1,section2
    these will be executed in this order.
    
    We can tell bck-backup to use a config file other then /etc/bck/bck.config,
    with the option --config-file=/my/path/my.config.file
    
5. Add entry to crontab

    To change the crontab, use :
    
    #>crontab -e
	
    Ex.: To run the job from Monday to Friday on 23:30, add the following line

	30	23	*	*	1-5	/usr/local/sbin/bck --do=seccion1,seccion2
	
    To send mail reports after completion we can add the --mail option here.
    If we want to send reports to a report server, we add the --report option.
    
    Ex.: Send reports to server every night at 01:00 am

	0	1	*	*	*	/usr/local/sbin/bck --report
	
    Ex.: We could send mails and reports after every execution at 12:00 am
    
	0	0	*	*	*	/usr/local/sbin/bck --do=section1,section2 --mail --report
	
	Note: change path if needed according to file locations
   
6. Server instalation

	We can install bck-backup's server, web server and report server, no additional
	software is needed.

	In the examples we run bck-backup as root, replace "root" with the apropiate user
	and give the user read access to the configuration files and read/write access
	to the logdir and spooldir.
	
6.1 Web front-end

	The standard port for bck.backup is 2311, but you can configure any port.

    Install an inetd server if not already installed
    
    Add a line to /etc/services
      > bck-backup		2311/tcp			# bck-backup web front-end
	The port number "2311" is defined in this line, if you want to use another
	port, change it here.
      
    Add line to /etc/inetd.conf
      > bck-backup			stream	tcp		nowait  root    /usr/local/sbin/bck     /usr/local/sbin/bck --httpserver

    Restart the inetd server
      #>/etc/init.d/inetutils-inetd restart

    To show de web-interface, point a browser to the servers ip address on port 2311
      > ex.: http://192.168.100.10:2311
      
	Note: change path if needed according to file locations
	
6.2 Report server

    Install an inetd server if not already installed
    	
    Add a line to /etc/services
      > bck-backup-remote	2312/tcp			# bck-backup report server
      
    Add line to /etc/inetd.conf
      > bck-backup-remote	stream	tcp		nowait  root    /usr/local/sbin/bck     /usr/local/sbin/bck --reportserver

    Restart the inetd server
      #>/etc/init.d/inetutils-inetd restart

	Configure your server's [report] section:
	ex.:
		[report]
		serverpassword=mysecret
	  
	Configure your client's [report] section:
	ex.:
		[report]
		server=192.168.200.10
		port=2312
		password=mysecret

	Note: change path if needed according to file locations

6.3 Running the Web front-end and the Report server on the same port

    The line in /etc/services
      > bck-backup		2311/tcp			# bck-backup web front-end and report server
      
    Add line to /etc/inetd.conf
      > bck-backup-remote	stream	tcp		nowait  root    /usr/local/sbin/bck     /usr/local/sbin/bck --httpserver --reportserver

    Restart the inetd server
      #>/etc/init.d/inetutils-inetd restart

	Note: change path if needed according to file locations

7. Security

	Running bck-backup as root might not be a good idea, for maximum security, we can run the servers
	in a chrooted enviroment.
	For the backup process, running as a normal user with only read access to the files to backup
	and read/write access to the destination directories is the best we can do.

8. The command line options

8.1 --version

	Show version installed. Cannot be use with other options.
	
8.2 --help

	Show brief instructions on how to use the command line options. Cannot be used with other options.

8.3 --pluginhelp

	Show brief instructions on how to use the plugins and their options. Cannot be used with other options.
	
8.4 --do=

	This is the option that actualy executes the sections defined. We can include more then one section
	in one line. Sections have to be seperated by a comma ','. Ex.: do=section1,section2
	If we specify more then one --do= option, only the last one will be used, ignoring all others.
	
8.5 --mail

	We will use this option to send mail reports as defined in the [mail] section. If we use this together
	with other options, the reports will be send after completion.
	Mail is only send if the database file has pending reports
	
8.6 --report

	Sends reports to report server, if no reports are pending, only sends a header line to confirm that
	it's still alive. If we use it together with other options, reports will be send after completion.
	  
8.7 --config-file=

	Sometimes we might want to use several different configuration files, with this options we can define
	path and filename of the configuration file. If not defined, it defaults to '/etc/bck/bck.config' .
	The special named configuration file called '/etc/bck/bck.default' will always be read if it exists.
	
8.8 --verbose

	By default, bck-backup is extremely quiet, with this options, some information about the process will
	print on standard output.
	
8.9 --debug

	For debuging purposes, print all relevant information on standard output about the process. If --verbose
	is also used, it will be ignored.
	
8.10 --httpserver

	Used for the web interface.

8.11 --reportserver

	Used for the report server.

8.12 --update

	Start selfupdate if correctly configured. It will download bck.backup from the update server and 
	rename the old version appending the verion number.

8.13 --check

	Check the configuration file structure and report any errors.
	Also test most [global] section settings, also will create logdir and dbdir if needed.

9. The configuration files

9.1 The [global] section

	[global]
	lang= 			[English]	For future use, defines the language of the web interface and mail reports.
	client=			[name]		This identifies the configuration and is visible in the mail reports and report server header lines.
	sysloglevel=		[0-5]		For future use, defines what will be logged to the syslog.

	smtpserver=		[hostname]	Server to use as smtp server for mail reports.
	smtpport=		[portnr]	Port to use to communicate to smpt server, normaly "25".
	smtpuser=		[mail_account] Account name for authentication on smtp server.
	smtppass=mail		[password]	Password for authentication on smtp server.
	smtpfrom=		["User Name" <user@mail.address>] From line for mail reports.
	(Mail related entries should be moved to [mail] section.)
	
	ntpserver=		[hostname]	ntp server to use,
	
	ipwebaddress=		[url]		url to use to get a public ip from. If omitted, not used. (not http://)
								ex.: whatismyip.com/automation/n09230945.asp

	logdir=			[path]		path to log directory. Default is "/var/log/bck".
	dbdir=			[path]		path to statusfile derectory. Default is "/var/spool/bck".
	tempdir=		[path]		path to temp diretory. Default is "/var/tmp". This is where temporal files
								for cyphering are created, make sure you have space available.

	oktag=			[name]		Tag used in subject line when all section are ok. default: "backup"
	errortag=		[name]		Tag used in subject line when at least one section has errors. default: "backup error"
	warningtag=		[name]		Tag used in subject line when at least one section has warnings. default: "backup warning"
	mailtext=		[text/path/url]	If it is a text or points to a file or url, will be apended at the end of all mail reports.
						Default is /etc/bck/alert.txt, use this if you want make your customers aware of the
						importance of backups in good condition. (html tags are stripped for plaintext)

9.2 The [http] section

	[http]
	user=			[user]		Username for authentification on some pages in the web interface, if left blank, access totaly denied.
	pass=			[password]	Password for authentification on some pages in the web interface, if left blank, access totaly denied.
	reportlines=		[num]		Number of report lines to show per page in the web interface.
	
9.3 The [update] section

	[update]
	url=			[url]		URL to update server. ex:. http://bck-backup.svn.sourceforge.net/viewvc/bck-backup/stable/bck
	user=			[username]	Authentification for update server (if needed).
	password=		[password]	Authentification for update server (if needed).
	
9.4 The [report] section

	[report]
	server=			[hostname]	Hostname of report server.
	port=			[portnr]	Portnumber of report server.
	password=		[password]  Password to access server.
	serverpassword=		[password]	Server password when running as report server, if left blank, no reports will be accepted at all.
	
9.5 The [mail] section

	[mail]
	mailaddres=level,mailtype ex.: admin@yoursite.com=4,html
		level	[0-4]		Number from 0 to 4 to indicate level:
			0: Only send report on error
			1: Send report on error or warning
			2: Always send report and include .log files
			3: Always send report and include .log and .lst files
			4: Always send report and include .log amd .lst files and include used config file.
		mailtype	[html/plain/()] 
			html	Send mail with nice html formatted report.
			plain	Send mail with simple text report.
			()	Send mail in html and plaintext using multipart.

9.6 The [backup] sections

	BLOCK
	[blockname]
	name = Descrition for reports and logging
	type = [ local | exec | firebird | part | tape | samba | rsync | optical | sysinfo ]
		local : copy from one directory to other
		exec : execute command
		firebird : make backup with gbak for database of firebird
		part : mount partition and use as destination
		tape : copy to tape with tar
		samba : copy to samba share
		rsync : copy to rsyncd server
		optical : for future use. copy to CD-R,CD-RW,DVD-R,DVD-RW
		sysinfo : for future use. recolect system information and send in report
	
	sourcelist = path for source files, for type=exec this is the working directory
	excludelist = files to exlude con pattern matching
		Multiple sourcelist and excludelist entries may be specified, this is equal to a comma seperated list.
	dest = destination for copy
	maxsize = maximum size allowed on destination, will not copy if sources size is bigger then this number and flag error
		If not defined, will only calculate the size to be copied, set to -1 if you do not want to calculate this.
	cmd = command to execute for type=exec sections
	medium = [ CD | CD-RW | DVD | DVD-RW ]
	user = username for services authentification
	pass = password for services authentification
	histdirs = history directories, -1 -> new dir for every copy, x -> create x directories.
	options = options to pass to command called, use defaults if none given.
		rsync section default options: --recursive --verbose --rsh=ssh --delete-after --modify-window=3 --times --stats --devices --specials --times --perms --owner --group --links
	cypher = [yes/no] Experimental! yes to encrypt files
	cert = cert.file used for encryption
	eject = [yes/no] Eject medium after backup, if supported.
	
	... This needs more work
	
10. The database file

10.1 Data file location

	Default location for the database file is: /var/lib/bck
	We can change this in the configuration file, the default name of the configuration file is status.db,
	but if we use the --config-file option, the file will be named like the config file, filtering out any non
	alfa characters. Ex.: --config-file=/etc/bck/myconfig.cfg -> database named etcbckmyconfigbckcfg.db
	This is done so every configuration file has its own database file.
	The default configuration file, default.config is never used for naming.

10.2 Database field definitions

	The internal database uses a csv type file. 
	
	The records have 9 fields, if more fields are present, they will be ignored when reading, and they will be
	deleted whenever the database field needs updating.

	|Status bits|,|Section Name|,|Section Description|,|Timestamp|,|Status|,|Size|,|Dest size|,|Dest free|,|infotext|
	      |                                                 |          |       |         |         |             |
	      |                                                 |          |       |         |         |             -> Short description of what was done
	      |                                                 |          |       |         |         -> Bytes free on destination
	      |                                                 |          |       |         -> Size of destination in bytes
	      |                                                 |          |       -> Size of setion
	      |                                                 |          -> Text field status [OK, ERROR, Warning]
	      |                                                 -> Internal timestamp format ddmmyyyyhhmm
	      -> 8 bits [7 6 5 4 3 2 1 0]
		 Bit 0 : 0-Not send by mail		1-Send by mail			(1)
		 Bit 1 : 0-Not send to remote server	1-Send to remote server		(2)
		 Bit 2 : 0-Line				1-Header			(4)
		 Bit 3&4 : 00-OK  01-Warning  10-ERROR  11-Not Available [Defines color used in Status column] (8&16)
		 Bit 5 : 0-Finished		1-In progress				(32)
		 Bit 6 : 0-No alarm             1-Alarm					(64)
		 Bit 7 : 0-Local		1-Remote				(128)
		 
	File locking (flock) is used when adding or updating records, any program wanting to read and/or write from the
	database should respect file locking. File locking is needed because when running as a report server, several
	instances might be executing at the same time and could overwrite data written simultaneously.
	
11 The plugins

	The plugins are dynamicaly loaded when needed. The method used in the plugin system is to name the object of all plugins
	equaly, the backdraw is that the redefine warnings have to be truned off.